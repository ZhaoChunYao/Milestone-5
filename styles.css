/* Resetting some defaults so we can define things manually */
body,
h1,
p {
  margin: 0;
  padding: 0;
}

/* Styling our header */
header {
  background-color: black;
  text-align: center;
  color: white;
  height: 100px;
}

.title {
  padding: 20px;
}

.wrapper {
  display: flex; /* Allows us to position things inside this div with more freedom, see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ for more details*/
  flex-grow: 1; /* The div will now grow to fill the available space */

  /* TODO make sure the minimum height of the wrapper is such that it fills the remaining space */
  /* NB we are going to do this in a slightly hacky way */
  /* vh is the viewheight, you should use this VERY sparingly, this situation is ok because we're limiting what the user can do */
  /* we'll minus 150px as this is the height we have manually defined the header and footer to be combined (100px + 50px)*/
  /* If we changed the height of the header and footer we'd have to change this here too! */

  min-height: calc(100vh - 150px);
}

/* TODO Show the impact of changing the flex values */
.left-column {
  flex: 1; /* in tandem with other flex values in the parent div tells us how much space will be taken up by this column, in this situation 1/3*/
  background-color: #2c2c2c;
  color: #f0f0f0;
  display: flex;
  /* Position things vertically in the centre */
  align-items: center;
  /* Position things horizontally in the centre */
  justify-content: center;
  padding: 20px;
}

.left-column-content {
  /* TODO make sure the maximum height of this container never exceeds the available space */
  /* This is again slightly janky and will have to be updated if we change the size of the header and footer */
  max-height: calc(100vh - 150px);
  overflow: auto;
  /* TODO force the div to create a scrollbar instead of increasing its vertical height */
}

/* TODO hide the scrollbar on the left-column-content*/

.left-column-content::-webkit-scrollbar {
  width: 0; /* Hide the scrollbar's width */
  height: 0; /* Hide the scrollbar's height */
}

.right-column {
  flex: 2; /* in tandem with the flex:1 on left-column, means this will take up 2/3 of the available space*/
  background-color: #A9A9A9;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
}

footer {
  position: fixed; /*force the footer to not move regardless of what else is going on on the page*/
  bottom: 0; /* Make sure it stays at the bottom of the page */
  background-color: black;
  display: flex; /*need this to be a flex to work with justify-content/align-items*/
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 50px;
}

.arrow-button {
  font-size: 10px;
  padding: 2px 10px;
  margin: 0 10px;
  height: 25px;
}

.verse {
  font-size: 2em;
  list-style-type: none;
  padding: 0px;
  font-weight: 100;
  color: black;
}

svg {
  background-color: #444;
}

/* TODO add css classes for active-verse and active-line */

.active-verse {
  font-weight: 900;
  color: gray;
}

.active-line {
  color: #ffffff;
}

/* TODO add css to create filler verse  */
.filler-verse {
  height: 500px;
}

/* TODO add css class to make "red" span clickable */
.red-span {
  cursor: pointer;
}

/* TODO add css class to make red-text text red */
.red-text {
  color: red;
}

.bar:hover {
  fill: #aaa;
}

/* TODO illustrate how to use css classes to interact with d3 elements */




/* parallel plot */
.overlay-panel {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 60%;
  background: #333;
  color: white;
  box-shadow: 0 -4px 10px rgba(0,0,0,0.3);
  transform: translateY(100%);
  transition: transform 0.4s ease-in-out;
  z-index: 9999;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.overlay-chart {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.overlay-panel.open {
  transform: translateY(0);
}

#openOverlayBtn.arrow-button {
  font-size: 10px;
  padding: 2px 10px;
  margin: 0 10px;
  height: 25px;
}

.overlay-close-button {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #222;
  color: white;
  border: 1px solid #888;
  padding: 4px 12px;
  border-radius: 10px;
  font-size: 14px;
  z-index: 10000;
  cursor: pointer;
}

.svg-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}



#categorySelect {
  margin-left: 8px;
  padding: 4px 6px;
  border-radius: 4px;
  border: none;
}

.overlay-toolbar {
  position: absolute;
  top: 10px;
  right: 20px;
  display: flex;
  align-items: center;
  gap: 8px;
  color: white;
  font-size: 14px;
}

